<configure xmlns="http://pylonshq.com/pyramid">

    <!-- Include special directives. -->

    <include package="everest.includes" />

    <!-- Repositories. -->

    <filesystem_repository
        directory="tests/data"
        content_type="everest.mime.CsvMime"
        make_default="true" />

    <!-- Use this to try out the SQL alchemy backend (you will need to
         comment out the filesystem_repository directive above)
    <orm_repository metadata_factory='plantscribe.orm.create_metadata'
        make_default="true" />
        -->

    <!-- Renderers. -->

    <renderer
        name="csv"
        factory="everest.renderers.RendererFactory" />

    <renderer
        name="atom"
        factory="everest.renderers.RendererFactory" />

    <!-- Representers. -->

    <representer content_type="everest.mime.XmlMime">
        <option
            name="xml_schema"
            value="plantscribe:resources/Plantscribe.xsd" />
        <option
            name="xml_ns"
            value="http://schemata.everest.org/plantscribe" />
        <option
            name="xml_prefix"
            value="ps" />
    </representer>

    <!-- Resource declarations. -->

    <include file="resources.zcml" />

    <!-- Views. -->

    <collection_view
        for="plantscribe.interfaces.ICustomer
             plantscribe.interfaces.IProject
             plantscribe.interfaces.ISpecies
            "
        view="everest.views.getcollection.GetCollectionView"
        renderer="atom"
        request_method="GET" />

    <collection_view
        for="plantscribe.interfaces.ICustomer
             plantscribe.interfaces.IProject
             plantscribe.interfaces.ISpecies
            "
        view="everest.views.postcollection.PostCollectionView"
        renderer="atom"
        request_method="POST"
        permission="create" />


    <member_view
        for="plantscribe.interfaces.ISite
             plantscribe.interfaces.ICustomer
             plantscribe.interfaces.IProject
             plantscribe.interfaces.ISpecies
             "
        view="everest.views.getmember.GetMemberView"
        renderer="atom"
        request_method="GET" />

    <collection_view
        for="plantscribe.interfaces.ICustomer
             plantscribe.interfaces.IProject
             plantscribe.interfaces.ISpecies
            "
        name="csv"
        accept="application/csv"
        view="everest.views.getcollection.GetCollectionView"
        renderer="csv"
        request_method="GET" />

    <!-- public folder for static content -->
    <view
        context="everest.resources.interfaces.IService"
        view="everest.views.static.public_view"
        name="public"
        request_method="GET" />

    <!-- this gives a static reference to the resources directory to be able
         to load the xsd file from the outside world -->
    <static
        name="Resource.xsd"
        path="everest:representers/Resource.xsd" />
</configure>
